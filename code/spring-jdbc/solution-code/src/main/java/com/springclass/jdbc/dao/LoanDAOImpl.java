package com.springclass.jdbc.dao;

import com.springclass.dao.LoanDAO;
import com.springclass.domain.Loan;
import com.springclass.jdbc.dao.query.LoanInsertQuery;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.support.JdbcDaoSupport;
import org.springframework.jdbc.support.GeneratedKeyHolder;
import org.springframework.jdbc.support.KeyHolder;
import org.springframework.stereotype.Repository;

import javax.annotation.PostConstruct;
import javax.sql.DataSource;

/**
 * <p/>
 * CREATE MEMORY TABLE LOAN(
 * LOAN_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1001,INCREMENT BY 10) NOT NULL PRIMARY KEY,
 * MEMBER_ID VARCHAR(10),
 * DVDCODE VARCHAR(10),
 * FROM_LOCATION VARCHAR(10),
 * LOAN_DATE DATE,EXPECTED_RETURN_LOCATION VARCHAR(10),
 * EXPECTED_RETURN_DATE DATE,
 * CONSTRAINT FK_LOAN_FOR_MEMBER FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER(MEMBER_ID))
 * </p>
 * This component and its source code representation are copyright protected
 * and proprietary to The Trivera Group, Inc., Worldwide D/B/A Trivera Technologies
 *
 * This component and source code may be used for instructional and
 * evaluation purposes only. No part of this component or its source code
 * may be sold, transferred, or publicly posted, nor may it be used in a
 * commercial or production environment, without the express written consent
 * of the Trivera Group, Inc.
 *
 * Copyright (c) 2016 The Trivera Group, LLC.
 * http://www.triveratech.com   http://www.triveragroup.com
 * </p>
 * @author The Trivera Group Tech Team.
 */
@Repository
public class LoanDAOImpl extends JdbcDaoSupport implements LoanDAO {


    // TODO: @Autowired the DataSource attribute here:
    @Autowired
    private DataSource dataSource;

    @PostConstruct
    private void initialize() {
        setDataSource(dataSource);
    }

    @Override
    public int addLoan(Loan loan) {

        Object[] args = new Object[]{loan.getMemberID(), loan.getDvdCode(), loan.getFromLocation(),
                loan.getLoanDate(), loan.getExpectedReturnLocation(), loan.getExpectedReturnDate()};

        //Create an instance of the pre-built LoanInsertQuery class
        LoanInsertQuery insertQuery = new LoanInsertQuery(getDataSource());

        //Create an instance of GeneratedKeyHolder, this class will contain the key that was generated by the database upon insertion of the record.
        KeyHolder keyHolder = new GeneratedKeyHolder();

        //Insert the record into the database, using Object[] provided and the keyHolder you just instantiated
        insertQuery.update(args, keyHolder);

        //Obtain the value of the generated key and return this value to the caller.
        return keyHolder.getKey().intValue();
    } // end addLoan
} // The End...
